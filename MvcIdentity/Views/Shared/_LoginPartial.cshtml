@using Microsoft.AspNetCore.Identity
@using MvcIdentity.Areas.Identity.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@* @inject ApplicationUser LoggedInUser *@

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="users" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register" title="Users">Register Users</a>
        </li>
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
            </form>
        </li>
    }
</ul>
@* <ul class="navbar-nav"> *@
@*     @if (SignInManager.IsSignedIn(User) && UserManager.GetUsersForClaimAsync(User.Claims.First()).Result.Contains(LoggedInUser)) *@
@*     { *@
@*          *@
@*     } *@
@* </ul> *@
